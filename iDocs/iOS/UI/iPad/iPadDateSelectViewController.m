////  iPadDateSelectViewController.m//  iDoc////  Created by Dmitry Likhachev on 11/29/09.//  Copyright 2009 KORUS Consulting. All rights reserved.//#import <QuartzCore/QuartzCore.h>#import "iPadDateSelectViewController.h"#import "iPadHeaderBodyFooterLayoutView.h"#import "iPadThemeBuildHelper.h"#import "UserDefaults.h"@interface iPadDateSelectViewController(PrivateMethods)- (CGRect)dateSelectTableViewFrame;- (CGRect)dateSelectPickerViewFrame;@end@implementation iPadDateSelectViewController@synthesize selectedDate, pickedDateCaption, switchControlCaption;#pragma mark custom methods - init- (id)initWithFrame:(CGRect)frame {	NSLog(@"iPadDateSelectViewController iPadDateSelectView initWithFrame");		if ((self = [super initWithNibName:nil bundle:nil])) {		self.navigationController.navigationBar.hidden = YES;		dateSelectTableRowCount = 2;		datePickerSize = CGSizeMake(300, 160);		underControl = NO;		iPadHeaderBodyFooterLayoutView *container = [[iPadHeaderBodyFooterLayoutView alloc] init];		container.showFooter = NO;		container.frame = frame;		self.view = container;		self.view.frame = frame;								dateSelectTableView = [[UITableView alloc] initWithFrame:[self dateSelectTableViewFrame] style:UITableViewStylePlain];		dateSelectTableView.rowHeight = constDateTextCellHeight;		dateSelectTableView.autoresizingMask = UIViewAutoresizingFlexibleWidth|UIViewAutoresizingFlexibleTopMargin|UIViewAutoresizingFlexibleBottomMargin;//| UIViewAutoresizingFlexibleBottomMargin | UIViewAutoresizingFlexibleTopMargin				dateSelectTableView.backgroundColor = [UIColor clearColor];		dateSelectTableView.opaque = NO;		dateSelectTableView.delegate = self;		dateSelectTableView.dataSource = self;				[container.bodyPanel addSubview:dateSelectTableView];						dateSelectorBackView = [[UIView alloc] initWithFrame:[self dateSelectPickerViewFrame]];		dateSelectorBackView.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleTopMargin;		dateSelectorBackView.backgroundColor = [iPadThemeBuildHelper commonPlaceholderBackColor];				UIView *dateSelectorCropView = [[UIView alloc] initWithFrame:CGRectMake(dateSelectorBackView.frame.size.width/2-datePickerSize.width/2, 																				10+7, 																				datePickerSize.width-32, 																				datePickerSize.height-14)];		dateSelectorCropView.autoresizingMask = UIViewAutoresizingNone;		dateSelectorCropView.layer.cornerRadius = 4.0f;		dateSelectorCropView.layer.borderWidth = 1;		dateSelectorCropView.clipsToBounds = YES;				dateSelectDatePicker = [[UIDatePicker alloc] initWithFrame:CGRectOffset(CGRectInset(dateSelectorCropView.bounds, -16, -7), 0, -2)];        dateSelectDatePicker.datePickerMode = UIDatePickerModeDate;        dateSelectDatePicker.autoresizingMask = UIViewAutoresizingNone;		[dateSelectDatePicker setLocale:[NSLocale currentLocale]];		[dateSelectDatePicker addTarget:self action:@selector(datePickerValueChanged:) forControlEvents:UIControlEventValueChanged];		[container.bodyPanel addSubview:dateSelectorBackView];		[dateSelectorBackView addSubview:dateSelectorCropView];		[dateSelectorCropView addSubview:dateSelectDatePicker];		[dateSelectorCropView release];							self.selectedDate = nil;                UIColor *buttonColor = [iPadThemeBuildHelper commonButtonFontColor2];        UIColor *shadowColor = [iPadThemeBuildHelper commonShadowColor2];         		UIButton *backButton = [container prepareHeaderLeftButtonWithCaption:NSLocalizedString(@"BackButtonTitle",nil)                                                                 captionColor:buttonColor                                                                captionShadow:shadowColor                                                                  imageOrNil:nil];		[backButton addTarget:self action:@selector(navigateBack) forControlEvents:UIControlEventTouchUpInside];		[container.headerPanel addSubview:backButton];		UIButton *saveButton = [container prepareHeaderRightButtonWithCaption:NSLocalizedString(@"SaveButtonTitle",nil)                                                                  captionColor:buttonColor                                                                 captionShadow:shadowColor                                                                   imageOrNil:nil];		[saveButton addTarget:self action:@selector(saveValue:) forControlEvents:UIControlEventTouchUpInside];		[container.headerPanel addSubview:saveButton];				[container release];        self.pickedDateCaption = NSLocalizedString(@"ErrandSelectedDateTitle",nil);        self.switchControlCaption = NSLocalizedString(@"ErrandOnControlTitle",nil);			}	return self;}- (CGRect)dateSelectTableViewFrame {	iPadHeaderBodyFooterLayoutView *container = (iPadHeaderBodyFooterLayoutView *)self.view;	return CGRectMake(0.0f, 					  (container.bodyPanel.frame.size.height-datePickerSize.height-20)/2 - constDateTextCellHeight, 					  container.bodyPanel.frame.size.width, 					  constDateTextCellHeight*dateSelectTableRowCount);}- (CGRect)dateSelectPickerViewFrame {	iPadHeaderBodyFooterLayoutView *container = (iPadHeaderBodyFooterLayoutView *)self.view;	return CGRectMake(0.0f, 			   container.bodyPanel.frame.size.height-datePickerSize.height-20, 			   container.bodyPanel.frame.size.width, 					  datePickerSize.height+20);}#pragma mark custom methods - view behavior- (void)navigateBack {	[self.navigationController popViewControllerAnimated:YES];	}- (void)setMinimumDate:(NSDate *)date {	NSLog(@"iPadDateSelectViewController setMinimumDate");         dateSelectDatePicker.minimumDate = date;}- (void)setTitle:(NSString *)newTitle {	iPadHeaderBodyFooterLayoutView *container = (iPadHeaderBodyFooterLayoutView *)self.view;	[[container.headerPanel viewWithTag:constHeaderCenterTitleWithCaption] removeFromSuperview];    UIColor *titleColor = [iPadThemeBuildHelper commonHeaderFontColor2];    UIColor *shadowColor = [iPadThemeBuildHelper commonShadowColor2];     	[container.headerPanel addSubview:[container prepareHeaderCenterTitleWithCaption:NSLocalizedString(newTitle, nil)                                                                         captionColor:titleColor                                                                    captionShadow:shadowColor]];}- (void)setValue:(NSString *)newValue {	NSLog(@"iPadDateSelectViewController setValue: %@", newValue);	BOOL onOff = [newValue length];    if( nil != self.selectedDate ) {        self.selectedDate = nil;    }    self.selectedDate = (onOff ? [SupportFunctions convertXMLDateTimeStringToDate:newValue] : nil);	[self switchedTo:(onOff)];}- (void)saveValue:(id)sender {	if (delegate != nil && [delegate respondsToSelector:@selector(saveValue:)]) {		[delegate saveValue:(underControl ? [SupportFunctions convertDateToXMLDateTimeString:self.selectedDate] : constEmptyStringValue)];	}	[self.navigationController popViewControllerAnimated:YES];}- (void)setDelegate:(id<iPadDateSelectViewControllerDelegate>)newDelegate {	delegate = newDelegate;}#pragma mark iPadSwitchCellDelegate methods:- (void)switchedTo:(BOOL)onOff {	dateSelectorBackView.hidden = !onOff;	dateSelectTableRowCount = onOff ? 2 : 1;	underControl = onOff;	if (underControl) {		if(self.selectedDate == nil) {            //60 sec * 50 min * 24 hours * days            int intervalToAdd = 86400 * [UserDefaults intSettingByKey:constErrandDueDateInterval];                        NSDate *now = [NSDate date];            NSCalendar *calendar = [[NSCalendar alloc] initWithCalendarIdentifier:NSGregorianCalendar];            NSDateComponents *components = [calendar components:NSYearCalendarUnit|NSMonthCalendarUnit|NSDayCalendarUnit fromDate:now];            [components setHour:23];            [components setMinute:59];            [components setSecond:59];                        NSDate *today = [calendar dateFromComponents:components];            self.selectedDate = [NSDate dateWithTimeInterval:intervalToAdd sinceDate:today];            [calendar release];        }		[dateSelectDatePicker setDate:selectedDate];	}	else {        if( self.selectedDate != nil ) {            self.selectedDate = nil;        }	}	NSLog(@"iPadDateSelectViewController switchedTo %@", self.selectedDate);	dateSelectTableView.frame = [self dateSelectTableViewFrame];	[dateSelectTableView reloadData];}#pragma mark UIViewController methods- (void)viewWillAppear:(BOOL)animated {    [super viewWillAppear:animated];	    self.contentSizeForViewInPopover = self.view.frame.size;	}#pragma mark UITableViewDataSource and UITableViewDelegate methods- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {    return 1;}- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {    return dateSelectTableRowCount;}- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {	    NSString *cellIdentifier = [NSString stringWithFormat:@"DateTextCell%i",indexPath.row];    	switch (indexPath.row) {		case 0:		{			iPadSwitchCell *cell = (iPadSwitchCell *)[tableView dequeueReusableCellWithIdentifier:cellIdentifier];			if (cell == nil) {				cell = [[[iPadSwitchCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellIdentifier] autorelease];				[cell setBackgroundStyleForRow:2];				[cell setDelegate:self];			}			[cell setValue:underControl];			[cell setTitle:switchControlCaption];			return cell;		}		default:		{			iPadDateTextCell *cell = (iPadDateTextCell *)[tableView dequeueReusableCellWithIdentifier:cellIdentifier];			if (cell == nil) {				cell = [[[iPadDateTextCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellIdentifier] autorelease];				[cell setBackgroundStyleForRow:2];			}			[cell setValue:(selectedDate == nil ? constEmptyStringValue : [SupportFunctions convertDateToString:selectedDate withFormat:constDateTimeFormatDateJustPicked])];			[cell setTitle:pickedDateCaption];			return cell;		}	}}#pragma mark UIDatePicker methods- (void) datePickerValueChanged:(id) sender {    UIDatePicker* datePicker = (UIDatePicker *)sender;    	if( nil != selectedDate ) {        self.selectedDate = nil;    }    if( NSOrderedAscending == [[datePicker date] compare:datePicker.minimumDate] ) {        self.selectedDate = datePicker.minimumDate;        datePicker.date = datePicker.minimumDate;    }    else {        self.selectedDate = [datePicker date];    }	[(iPadDateTextCell *)[dateSelectTableView cellForRowAtIndexPath:[NSIndexPath indexPathForRow:1 inSection:0]]		setValue:[SupportFunctions convertDateToString:self.selectedDate withFormat:constDateTimeFormatDateJustPicked]];}#pragma mark other methods- (void)didReceiveMemoryWarning {	NSLog(@"iPadDateSelectView didReceiveMemoryWarning");		    [super didReceiveMemoryWarning];}- (void)dealloc {    if( self.selectedDate != nil ) {        self.selectedDate = nil;    }    if( self.pickedDateCaption != nil )        self.pickedDateCaption = nil;       if( self.switchControlCaption != nil )        self.switchControlCaption = nil;    	[dateSelectDatePicker release];	[dateSelectTableView release];		[dateSelectorBackView release];        [self setDelegate:nil];        [super dealloc];}@end